#!/usr/bin/env python3

import glob
import sys
import os
import pickle
import hashlib
from .db_connection import c

#c.execute('''CREATE TABLE path_db (id TEXT, full_path BLOB, file_name BLOB, st_mode INT, st_ino INT, st_dev INT, st_nlink INT, st_uid INT, st_gid INT, st_size INT, st_atime REAL, st_mtime REAL, st_ctime REAL)''')
#c.execute("PRAGMA synchronous = OFF")

file = bytes(sys.argv[1], 'UTF8')
file = os.path.realpath(file)
filename = file.split(b'/')[-1]
filestat = os.stat(file)

print("searching for:", file, "...")

#print(filestat)

#answer = c.execute('''SELECT full_path, file_name, st_size FROM path_db WHERE file_name=?''', (b"explore3d.m.txt",))
answer = c.execute('''SELECT full_path, file_name, st_size FROM path_db WHERE file_name=?''', (filename,))
#print(answer.fetchone())

for result in answer.fetchall():
    if result[0] == file:
        continue

    if result[2] == filestat.st_size:
#       print("filename and size match:", result)
#       print("checking if match still exists")
        try:
            matchstat = os.stat(result[0])
        except FileNotFoundError:
#           print("Error: No such file or directory:", result[0], "skipping")
#           os._exit(1)
            continue

#       print("checking hash...")
        with open(result[0], 'rb') as fh:
            matchhash = hashlib.sha1(fh.read()).hexdigest()
        with open(file, 'rb') as fh:
            filehash = hashlib.sha1(fh.read()).hexdigest()
        if matchhash == filehash:
#           print("match found:", result[0])
            print(result[0])
        else:
            print("hashes do not match! NOT a match:", result[0])

#print(answer.fetchall())
